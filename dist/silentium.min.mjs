const e=(...e)=>t=>{const r=new Set(Object.keys(e)),n=new Set,s={};return Object.entries(e).forEach((([e,o])=>{r.add(e),o((o=>{n.add(e),s[e]=o,n.size>0&&n.size===r.size&&t(Object.values(s))}))})),()=>{r.clear(),n.clear()}},t=(...e)=>t=>{e.forEach((e=>{e(t)}))},r=(e,t)=>r=>{e((e=>{r(t(e))}))},n=e=>null!=e;var s=Object.defineProperty,o=(e,t,r)=>((e,t,r)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class c{constructor(){o(this,"owners"),o(this,"innerOwner"),this.owners=new Set,this.innerOwner=e=>{this.owners.forEach((t=>{t(e)}))}}owner(){return this.innerOwner}size(){return this.owners.size}has(e){return this.owners.has(e)}add(e){return this.owners.add(e),this}remove(e){return this.owners.delete(e),this}destroy(){return this.owners.forEach((e=>{this.remove(e)})),this}}const i=e=>{let t=!1;return(...r)=>{t||e(...r),t=!0}},a=(...e)=>{let t,r;const n=new WeakMap,s=o=>{const c=e[o],i=e[o+1];c((e=>{i||(r=e,t?.(e)),i&&void 0!==r&&void 0!==t&&t?.(r),i&&!n.has(c)&&s(o+1),n.set(c,1)}))},o=i((e=>{t=e,s(0)}));return e=>{o(e),t=e}},h=(e,t)=>r=>{e(t(r))},u=(e,t,r)=>n=>{e((e=>{t(e)?n(e):void 0!==r&&n(r)}))},d=(e,...t)=>r=>{e((e=>{r(e)}),...t)},w=(e,t,r,n)=>s=>{const o=(...e)=>{s(e)};return e[r](t,o),()=>{void 0!==n&&e[n](t,o)}},l=e=>{let t;const r=()=>{void 0!==t&&n(e)&&t(e)};return[e=>{t=e,r()},t=>{e=t,r()}]},f=e=>{const[t,r]=l();return[t=>{e.then((e=>{t(e)})).catch((e=>{r(e)}))},t]},v=e=>t=>{t(e)},b=(e,t)=>(...r)=>{const n=e(...r);return a(t,n)},y=e=>(...t)=>{const r=new e(...t);return e=>{r.value(e)}},p=(t,r)=>n=>{t((t=>{const s=[];t.forEach((e=>{let t=e;"function"!=typeof t&&(t=v(t));const n=r(t);s.push(n)}));e(...s)(n)}))},O=e=>t=>{let r=!1;e((e=>{r||(r=!0,t(e))}))},E=e=>t=>{const r=[];e((e=>{r.push(e),t(r)}))},z=e=>{const t=new c;let r;const s=i((()=>{const n=t.owner();e((e=>{n(e),r=e}))}));return[e=>(s(),n(r)&&!t.has(e)&&e(r),t.add(e),()=>{t.destroy()}),t]},j=e=>{const t=new c,r=i((r=>{t.add(r),e(t.owner())}));return[e=>(r(e),t.add(e),()=>{t.destroy()}),t]},m=e=>t=>{e((e=>{e.forEach((e=>{t(e)}))}))};export{c as OwnerPool,e as all,t as any,r as applied,a as chain,h as executorApplied,u as filtered,d as fromCallback,w as fromEvent,f as fromPromise,v as i,n as isFilled,b as lazyChain,y as lazyClass,p as map,l as of,i as onExecuted,O as once,E as sequence,z as shared,j as sharedStateless,m as stream};
//# sourceMappingURL=silentium.min.mjs.map
