!function(e){"use strict";const t=(...e)=>t=>{const r=new Set(Object.keys(e)),n=new Set,s={};return Object.entries(e).forEach((([e,o])=>{r.add(e),o((o=>{n.add(e),s[e]=o,n.size>0&&n.size===r.size&&t(Object.values(s))}))})),()=>{r.clear(),n.clear()}},r=e=>null!=e;var n=Object.defineProperty,s=(e,t,r)=>((e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class o{constructor(){s(this,"owners"),s(this,"innerOwner"),this.owners=new Set,this.innerOwner=e=>{this.owners.forEach((t=>{t(e)}))}}owner(){return this.innerOwner}size(){return this.owners.size}has(e){return this.owners.has(e)}add(e){return this.owners.add(e),this}remove(e){return this.owners.delete(e),this}destroy(){return this.owners.forEach((e=>{this.remove(e)})),this}}const a=e=>{let t=!1;return(...r)=>{t||e(...r),t=!0}},c=(...e)=>{let t,r;const n=new WeakMap,s=o=>{const a=e[o],c=e[o+1];a((e=>{c||(r=e,t?.(e)),c&&void 0!==r&&void 0!==t&&t?.(r),c&&!n.has(a)&&s(o+1),n.set(a,1)}))},o=a((e=>{t=e,s(0)}));return e=>{o(e),t=e}},i=e=>{let t;const n=()=>{void 0!==t&&r(e)&&t(e)};return[e=>{t=e,n()},t=>{e=t,n()}]},h=e=>t=>{t(e)};e.OwnerPool=o,e.all=t,e.any=(...e)=>t=>{e.forEach((e=>{e(t)}))},e.applied=(e,t)=>r=>{e((e=>{r(t(e))}))},e.chain=c,e.executorApplied=(e,t)=>r=>{e(t(r))},e.filtered=(e,t,r)=>n=>{e((e=>{t(e)?n(e):void 0!==r&&n(r)}))},e.fromCallback=(e,...t)=>r=>{e((e=>{r(e)}),...t)},e.fromEvent=(e,t,r,n)=>s=>{const o=(...e)=>{s(e)};return e[r](t,o),()=>{void 0!==n&&e[n](t,o)}},e.fromPromise=e=>{const[t,r]=i();return[t=>{e.then((e=>{t(e)})).catch((e=>{r(e)}))},t]},e.i=h,e.isFilled=r,e.lazyChain=(e,t)=>(...r)=>{const n=e(...r);return c(t,n)},e.lazyClass=e=>(...t)=>{const r=new e(...t);return e=>{r.value(e)}},e.map=(e,r)=>n=>{e((e=>{const s=[];e.forEach((e=>{let t=e;"function"!=typeof t&&(t=h(t));const n=r(t);s.push(n)}));t(...s)(n)}))},e.of=i,e.onExecuted=a,e.once=e=>t=>{let r=!1;e((e=>{r||(r=!0,t(e))}))},e.sequence=e=>t=>{const r=[];e((e=>{r.push(e),t(r)}))},e.shared=e=>{const t=new o;let n,s;const c=a((()=>{const r=t.owner();s=e((e=>{r(e),n=e}))}));return[e=>(c(),r(n)&&!t.has(e)&&e(n),t.add(e),()=>{t.remove(e)}),()=>{t.destroy(),s?.()},t]},e.sharedStateless=e=>{const t=new o;let r;const n=a((n=>{t.add(n),r=e(t.owner())}));return[e=>(n(e),t.has(e)||t.add(e),()=>{t.remove(e)}),()=>{t.destroy(),r?.()},t]},e.stream=e=>t=>{e((e=>{e.forEach((e=>{t(e)}))}))}}({});
