!function(e){"use strict";const t=(...e)=>{const t=new Set(Object.keys(e)),r=new Set;return n=>{const o={};Object.entries(e).forEach((([e,s])=>{t.add(e),s((s=>{r.add(e),o[e]=s,((e,t)=>e.size>0&&e.size===t.size)(r,t)&&n(Object.values(o))}))}))}},r=e=>null!=e;var n=Object.defineProperty,o=(e,t,r)=>((e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class s{constructor(){o(this,"owners"),o(this,"innerOwner"),this.owners=new Set,this.innerOwner=e=>{this.owners.forEach((t=>{t(e)}))}}owner(){return this.innerOwner}size(){return this.owners.size}has(e){return this.owners.has(e)}add(e){return this.owners.add(e),this}remove(e){return this.owners.delete(e),this}destroy(){return this.owners.forEach((e=>{this.remove(e)})),this}}const i=e=>{let t=null;const n=e=>{r(e)&&t&&t(e)};return{value:r=>{if(t)throw new Error("Late component gets new user, when another was already connected!");t=r,n(e)},give:e=>{n(e)}}},a=e=>t=>{let r=!1;e((e=>{r||(r=!0,t(e))}))},l=(e,t=!1)=>{const n=new s;let o;const l=i();return a(l.value)((()=>{e((e=>{n.owner()(e),o=e}))})),{value:e=>(l.give(1),t||!r(o)||n.has(e)||e(o),n.add(e),()=>{n.remove(e)}),give:e=>{o=e,n.owner()(e)},pool:()=>n,destroy(){n.destroy()}}},c=(e,t=!1)=>{const r=l(e.value,t);return{value:e=>{r.value(e)},give:t=>{e.give(t)}}};const u=e=>t=>t(e);e.OwnerPool=s,e._void=()=>()=>{},e.all=t,e.any=(...e)=>t=>{e.forEach((e=>{e(t)}))},e.applied=(e,t)=>r=>{e((e=>{r(t(e))}))},e.chain=(...e)=>t=>{let r;const n=o=>{const s=e[o],i=e[o+1];s((e=>{i||(r=e),r&&t(r),i&&!r&&n(o+1)}))};n(0)},e.executorApplied=(e,t)=>r=>{e(t((e=>{r(e)})))},e.filtered=(e,t,r)=>n=>{e((e=>{t(e)?n(e):void 0!==r&&n(r)}))},e.fromEvent=(e,r,n,o)=>{let s=null;const i=e=>{s&&s(e)};return a=>{s=a;return t(e,r,n)((([e,t,r])=>{e?.[r]&&e[r](t,i)})),()=>{if(s=null,!o)return;t(e,r,o)((([e,t,r])=>{e[r](t,i)}))}}},e.fromPromise=(e,t)=>r=>{e.then((e=>{r(e)})).catch((e=>{t?.(e)}))},e.isFilled=r,e.late=i,e.lateShared=e=>{const t=c(i(e));return{value:t.value,give:t.give}},e.lazyApplied=(e,t)=>(...r)=>t(e(...r)),e.lazyArgs=(e,t,r=0)=>(...n)=>e(...function(e,t,r){const n=e.slice(0,r);for(;n.length<r;)n.push(void 0);return n.concat(t)}(n,t,r)),e.lazyDestroyable=e=>{const t=[];return{get:(...r)=>{const n=e(...r);return t.push(n),n},destroy:()=>{t.forEach((e=>e.destroy()))}}},e.map=(e,r)=>n=>{e((e=>{const o=[];e.forEach((e=>{let t=e;"function"!=typeof t&&(t=u(t));const n=r(t);o.push(n)}));t(...o)(n)}))},e.of=u,e.on=(e,t)=>e(t),e.once=a,e.primitive=(e,t=null)=>(e((e=>{t=e})),{[Symbol.toPrimitive]:()=>t}),e.sequence=e=>t=>{const r=[];e((e=>{r.push(e),t(r)}))},e.shared=l,e.sharedSource=c,e.stream=e=>t=>{e((e=>{e.forEach((e=>{t(e)}))}))}}({});
