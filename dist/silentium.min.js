!function(e,t){"use strict";const r=(e,t)=>{if(null==e)throw new Error("value didn't receive source argument");if(void 0===t||null===e)throw new Error("value didn't receive guest argument");return"function"==typeof e?e(t):"object"==typeof e&&"value"in e&&"function"==typeof e.value?e.value(t):i(e,t),e},o=e=>null!==e&&"object"==typeof e&&"value"in e&&"function"==typeof e.value||null!=e,n=e=>{if(void 0===e)throw new Error("Source constructor didn't receive executor function");return t=>{r(e,t)}},i=(e,t)=>{if(void 0===e)throw new Error("give didn't receive data argument");return void 0===t?n(e):("function"==typeof t?t(e):t.give(e),t)},s=e=>{if(!e)throw new Error("receiver function was not passed to Guest constructor");const t={give:r=>(e(r),t)};return t},u=e=>{let t=!1;return()=>{t||e(),t=!0}},c=(e,t)=>{if(void 0===e)throw new Error("GuestCast didn't receive sourceGuest argument");if(void 0===t)throw new Error("GuestCast didn't receive targetGuest argument");const r={disposed(t){const r=e;return!!r.disposed&&r.disposed(t)},give:e=>(i(e,t),r),introduction:()=>"function"==typeof e?"guest":e.introduction?e.introduction():"guest"};return r},a=e=>{const t={give:r=>(e=r,t),value(){if(void 0===e)throw new Error("no value in GuestSync!");return e}};return t},d=(e,t)=>{const r={give:o=>(i(t(o),e),r)};return r},l=(e,t)=>({give:t((t=>i(t,e)))}),v=e=>"object"==typeof e&&null!==e&&"patron"===e?.introduction?.(),h=()=>"patron",p=e=>{if(void 0===e)throw new Error("Patron didn't receive willBePatron argument");const t={give:r=>(i(r,e),t),disposed(t){const r=e;return r?.disposed?.(t)||!1},introduction:h};return t},g=e=>{if(void 0===e)throw new Error("PatronOnce didn't receive baseGuest argument");let t=!1;const r={give:o=>(t||(t=!0,i(o,e)),r),disposed(r){if(t)return!0;const o=e;return!!o.disposed&&o.disposed(r)},introduction:h};return r};var f=Object.defineProperty,w=(e,t,r)=>((e,t,r)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);const y=new Map,E=new Map,m=new Map,b=[],S=()=>{b.forEach((e=>e()))},P={poolsCount:0,patronsCount:0},G=n((e=>{i(P,e),b.push((()=>{let t=0;y.forEach((e=>{t+=e.size})),P.poolsCount=y.size,P.patronsCount=t,i(P,e)}))})),z=(e,t)=>(m.has(t)||m.set(t,[]),m.get(t)?.push(e),e),C=(e,t)=>(t.forEach((t=>{z(e,t)})),e),D=e=>"object"==typeof e&&null!==e&&"destroy"in e&&"function"==typeof e.destroy,O=(...e)=>{e.forEach((e=>{D(e)&&e.destroy();const t=E.get(e);t?.destroy();const r=m.get(e);m.delete(e),r&&O(...r)}))},j=e=>{if(void 0===e)throw new Error("removePatronFromPools didn't receive patron argument");y.forEach((t=>{t.delete(e)})),S()};class A{constructor(e){this.initiator=e,w(this,"patrons"),w(this,"give"),this.patrons=new Set,y.set(this,this.patrons),E.set(this.initiator,this);const t=e=>{this.patrons.forEach((t=>{this.sendValueToGuest(e,t)}))};this.give=e=>(t(e),this),S()}size(){return this.patrons.size}add(e){if(!e)throw new Error("PatronPool add method received nothing!");return"function"!=typeof e&&e.introduction&&"patron"===e.introduction()&&this.patrons.add(e),S(),this}remove(e){return this.patrons.delete(e),S(),this}distribute(e,t){return this.add(t),this.sendValueToGuest(e,t),this}destroy(){return this.patrons.forEach((e=>{this.remove(e)})),y.delete(this),E.delete(this.initiator),S(),this}sendValueToGuest(e,t){return this.guestDisposed(e,t)||i(e,t),this}guestDisposed(e,t){return!!t.disposed?.(e)&&(this.remove(t),!0)}}const M=(e,t)=>{const o=a(t);r(e,p(o));const n={value(t){return r(e,t),this},syncValue(){try{return o.value()}catch{throw new Error("No value in SourceSync")}}};return z(n,e),n},V=e=>null==e,F=e=>{const t={},n=new A(t);let i=V(e);return!i&&o(e)&&r(e,g((t=>{i=V(t),e=t}))),t.value=r=>i?(v(r)&&n.add(r),t):("function"==typeof r?n.distribute(e,s(r)):n.distribute(e,r),t),t.give=r=>(i=V(r),e=r,i||n.give(e),t),t},x=e=>{const t=new Set(Object.keys(e)),o=new Set,n=F({}),a=[],d=u((()=>{Object.entries(e).forEach((([e,i])=>{z(n,i),t.add(e);const u=p((t=>{n.value(s((r=>{o.add(e);const i={...r,[e]:t};n.give(i)})))}));a.push(u),r(i,u)}))}));return{value(e){d();const r=c(e,(r=>{o.size>0&&o.size===t.size&&i(Object.values(r),e)}));a.push(r),n.value(r)},destroy(){a.forEach((e=>{j(e)}))}}},q=(e,o)=>{const n=F(),s=u((()=>{r(o,p((()=>{i(null,n)}))),r(e,p(n)),z(n,e)}));return t.sourceDynamic(n.give,(e=>{s(),n.value(e)}))};e.PatronPool=A,e.destroy=O,e.firstVisit=u,e.give=i,e.guest=s,e.guestApplied=d,e.guestCast=c,e.guestDisposable=(e,t)=>{if(void 0===e)throw new Error("GuestDisposable didn't receive guest argument");if(void 0===t)throw new Error("GuestDisposable didn't receive disposeCheck argument");const r={disposed:e=>t(e),give:t=>(i(t,e),r)};return r},e.guestExecutorApplied=l,e.guestSync=a,e.introduction=h,e.isDestroyable=D,e.isGuest=e=>{if(void 0===e)throw new Error("isGuest didnt receive mbGuest argument");return"function"==typeof e||"function"==typeof e?.give},e.isPatron=v,e.isPatronInPools=e=>{if(void 0===e)throw new Error("isPatronInPools didn't receive patron argument");let t=!1;return y.forEach((r=>{t||(t=r.has(e))})),t},e.isSource=o,e.lazy=e=>{if(void 0===e)throw new Error("lazy didn't receive buildingFn argument");return{get:(...t)=>e(...t)}},e.lazyClass=(e,t={})=>{if(void 0===e)throw new Error("PrivateClass didn't receive constructorFn argument");return{get:(...r)=>new e(...r,t)}},e.patron=p,e.patronApplied=(e,t)=>{const r=d(e,t),o={give:e=>(r.give(e),o),introduction:h};return o},e.patronExecutorApplied=(e,t)=>{const r=l(e,t),o={give:e=>(r.give(e),o),introduction:h};return o},e.patronOnce=g,e.patronPools=e=>{const t=[];return y.forEach(((r,o)=>{r.has(e)&&t.push(o)})),t},e.patronPoolsStatistic=G,e.removePatronFromPools=j,e.source=n,e.sourceAll=x,e.sourceAny=e=>{const t=F(),o=u((()=>{e.forEach((e=>{r(e,p(t))}))}));return e=>{o(),t.value(e)}},e.sourceApplied=(e,t)=>o=>{r(e,c(o,(e=>{i(t(e),o)})))},e.sourceChain=(...e)=>{const t=F(),o=new Set;let n=null;const i=u((()=>{e.forEach(((i,s)=>{r(i,p((r=>{o.add(s),s===e.length-1&&(n=r),o.size===e.length&&null!==n&&t.give(n)})))}))}));return e=>{i(),t.value(e)}},e.sourceCombined=(...e)=>t=>{const o=F();return C(o,e),r(x(e),p((e=>{t(o.give,...e)}))),o.value},e.sourceDestroyable=e=>{let t=null;return{value(r){return t=e(r),this},destroy(){return null!==t&&"function"==typeof t&&t(),this}}},e.sourceDynamic=(e,t)=>{if(void 0===e)throw new Error("SourceDynamic didn't receive baseGuest argument");if(void 0===t)throw new Error("SourceDynamic didn't receive baseSource argument");const o={value:e=>(r(t,e),o),give(t){return i(t,e),this}};return o},e.sourceExecutorApplied=(e,t)=>t((t=>{r(e,t)})),e.sourceFiltered=(e,t,o)=>n=>{r(e,c(n,(e=>{!0===t(e)?i(e,n):void 0!==o&&i(o,n)})))},e.sourceLazy=(e,t,o)=>{let n=null;const i=F(),s=q(i,o??F());let u=!1;return o&&r(o,p((()=>{O(n),n=null}))),o=>{u||(u=!0,r(x(t),p((()=>{n||(n=e.get(...t),r(n,p(i)))})))),r(s,o)}},e.sourceMap=(e,t)=>{if(void 0===e)throw new Error("SourceMap didn't receive baseSource argument");if(void 0===t)throw new Error("SourceMap didn't receive targetSource argument");const o=F(),n=u((()=>{r(e,p((n=>{const s=[];n.forEach((r=>{const o=t.get(r);z(o,e),s.push(o)})),r(x(s),g((e=>{O(...s),i(e,o)})))})))}));return e=>{n(),o.value(e)}},e.sourceMemoOf=e=>{const t=F(e),r=M(t,null),o={value:t.value,give:e=>(r.syncValue()!==e&&i(e,t.give),o)};return o},e.sourceOf=F,e.sourceOnce=e=>{let t=void 0!==e;const o=F(e);return{value(e){return r(o,e),this},give(e){return t||(o.give(e),t=!0),this}}},e.sourceRace=e=>{if(void 0===e)throw new Error("SourceRace didnt receive sources argument");return t=>{let o=null;e.forEach((e=>{r(e,c(t,(r=>{o&&o!==e||(i(r,t),o=e)})))}))}},e.sourceResettable=q,e.sourceSequence=(e,t)=>{if(void 0===e)throw new Error("SourceSequence didn't receive baseSource argument");if(void 0===t)throw new Error("SourceSequence didn't receive targetSource argument");return n=>{const s=F(),u=t.get(s);r(e,c(n,(e=>{let t=0;const c=[];e.forEach((()=>{c.push(F())}));const a=()=>{void 0!==e[t+1]&&(t+=1,d())};function d(){const n=c[t],i=e[t];o(i)?r(i,g((e=>{s.give(e),r(u,n),a()}))):(s.give(i),r(u,n),a())}void 0!==e[t]?(d(),r(x(c),n)):i([],n)})))}},e.sourceSync=M,e.subSource=z,e.subSourceMany=C,e.value=r}({},SourceDynamic);
